<!--

    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      This file is part of the LDP4j Project:
        http://www.ldp4j.org/

      Center for Open Middleware
        http://www.centeropenmiddleware.com/
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Copyright (C) 2014-2016 Center for Open Middleware.
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at

                http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Artifact    : org.ldp4j.framework:ldp4j-server-core:0.3.0-SNAPSHOT
      Bundle      : ldp4j-server-core-0.3.0-SNAPSHOT.jar
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- =================================================================== -->
	<!--   MODULE COORDINATES                                                -->
	<!-- =================================================================== -->

	<parent>
		<groupId>org.ldp4j.framework</groupId>
		<artifactId>ldp4j-server</artifactId>
		<version>0.3.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>ldp4j-server-core</artifactId>

	<!-- =================================================================== -->
	<!--   MODULE INFORMATION                                                -->
	<!-- =================================================================== -->

	<name>LDP4j :: Framework :: Server :: Core</name>
	<description>LDP4j Server Frontend Implementation</description>

	<!-- =================================================================== -->
	<!--   BUILD SETTINGS                                                    -->
	<!-- =================================================================== -->

	<properties>
		<sesame.version>2.7.9</sesame.version>
		<jena.version>2.13.0</jena.version>

		<arquillian.version>1.0.3.Final</arquillian.version>
		<shrinkwrap.descriptors.version>2.0.0-alpha-4</shrinkwrap.descriptors.version>
		<shrinkwrap.resolver.version>2.0.0-alpha-5</shrinkwrap.resolver.version>
		<shrinkwrap.version>1.1.1-alpha-1</shrinkwrap.version>

		<version.org.apache.tomcat>7.0.76</version.org.apache.tomcat>
		<version.org.eclipse.jdt.core.compiler>3.7</version.org.eclipse.jdt.core.compiler>

		<reflections.version>0.9.8</reflections.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.ldp4j.framework</groupId>
				<artifactId>ldp4j-server-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.ldp4j.framework</groupId>
				<artifactId>ldp4j-application-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-repository-sail</artifactId>
				<version>${sesame.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-sail-memory</artifactId>
				<version>${sesame.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-rio-rdfxml</artifactId>
				<version>${sesame.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openrdf.sesame</groupId>
				<artifactId>sesame-rio-turtle</artifactId>
				<version>${sesame.version}</version>
			</dependency>

			<!-- ShrinkWrap -->
			<dependency>
				<groupId>org.jboss.shrinkwrap</groupId>
				<artifactId>shrinkwrap-bom</artifactId>
				<version>${shrinkwrap.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- ShrinkWrap Resolver -->
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>${shrinkwrap.resolver.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- ShrinkWrap Descriptors -->
			<dependency>
				<groupId>org.jboss.shrinkwrap.descriptors</groupId>
				<artifactId>shrinkwrap-descriptors-bom</artifactId>
				<version>${shrinkwrap.descriptors.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- Arquillian stuff -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.ldp4j.framework</groupId>
			<artifactId>ldp4j-application-depchain</artifactId>
			<type>pom</type>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.ldp4j.commons.rmf</groupId>
			<artifactId>rmf-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- CXF -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-bundle-jaxrs</artifactId>
			<version>${cxf.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jetty-security</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jetty-http</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jetty-server</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jetty-util</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jetty-io</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jetty-continuation</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring (CXF required)  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-core</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>
						com.springsource.org.aopalliance
					</artifactId>
					<groupId>org.aopalliance</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-io</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Required for testing -->
		<dependency>
			<groupId>org.ldp4j.framework</groupId>
			<artifactId>ldp4j-application-examples</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ldp4j.commons</groupId>
			<artifactId>ldp4j-commons-testing</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- HttpComponents Client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient-cache</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>fluent-hc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-integration</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- ShrinkWrap -->
		<dependency>
			<groupId>org.jboss.shrinkwrap</groupId>
			<artifactId>shrinkwrap-depchain</artifactId>
			<version>${shrinkwrap.version}</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<!-- ShrinkWrap Resolver -->
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-depchain</artifactId>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<!-- ShrinkWrap Descriptors -->
		<dependency>
			<groupId>org.jboss.shrinkwrap.descriptors</groupId>
			<artifactId>shrinkwrap-descriptors-depchain</artifactId>
			<version>${shrinkwrap.descriptors.version}</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<!-- Arquillian -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-tomcat-embedded-7</artifactId>
			<version>1.0.0.CR6</version>
			<scope>test</scope>
		</dependency>

		<!-- Tomcat Embed (Arquillian Tomcat Container required) -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>${version.org.apache.tomcat}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>${version.org.apache.tomcat}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-logging-juli</artifactId>
			<version>${version.org.apache.tomcat}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>${version.org.eclipse.jdt.core.compiler}</version>
			<scope>test</scope>
		</dependency>

		<!-- Testing utils -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-arq</artifactId>
			<version>${jena.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.4.1</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>reserve-tomcat-port</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<configuration>
							<portNames>
								<portName>tomcat.http.port</portName>
							</portNames>
						</configuration>
					</execution>
					<execution>
						<id>add-tomcat-conf</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src${file.separator}it${file.separator}resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<testNGArtifactName>none:none</testNGArtifactName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<executions>
					<execution>
						<id>update-categories</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<color>true</color>
							<source>
								def expandCategories(text) {
									text?.split(',').collect { 'org.ldp4j.commons.testing.categories.'+it.trim() }.join(', ')
								}
								def processCategories(Map args) {
									def propertyName = "test." + args.property + "." + (args.includes?'includes':'excludes')
									def sourceProperty = args.type + "." + propertyName
									def targetProperty = (args.type=='it'?'failsafe':args.type=='ut'?'surefire':type) +"." + propertyName
									def categories=project.properties.get(sourceProperty)
									if(args.debug) {
										println args
										println "$propertyName ($sourceProperty --> $targetProperty)"
										println "project.properties.get($sourceProperty)=$categories"
									}
									if(categories!=null) {
										expandedCategories=expandCategories(categories)
										project.properties.setProperty(targetProperty,expandedCategories)
										println "$sourceProperty [$categories] --> $targetProperty [$expandedCategories] "
									}
								}
								processCategories(type:'ut',property:'groups',includes:true)
								processCategories(type:'ut',property:'groups',includes:false)
								processCategories(type:'it',property:'groups',includes:true)
								processCategories(type:'it',property:'groups',includes:false)
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.config.file>src/test/resources/logging.properties</java.util.logging.config.file>
						<java.util.logging.manager>org.apache.juli.ClassLoaderLogManager</java.util.logging.manager>
						<!-- org.ldp4j.testing.logging.setup>true</org.ldp4j.testing.logging.setup -->
						<!-- org.ldp4j.testing.logging.archive>true</org.ldp4j.testing.logging.archive -->
						<!-- org.ops4j.pax.url.mvn.localRepository>${settings.localRepository}</org.ops4j.pax.url.mvn.localRepository -->
						<!-- org.ops4j.pax.url.mvn.settings>${basedir}/target/test-classes/settings.xml</org.ops4j.pax.url.mvn.settings -->
						<arquillian.launch>tomcat-cluster</arquillian.launch>
					</systemPropertyVariables>
					<groups>${failsafe.test.groups.includes}</groups>
					<excludedGroups>${failsafe.test.groups.excludes}</excludedGroups>
					<testNGArtifactName>none:none</testNGArtifactName>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.groovy.maven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.0,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>